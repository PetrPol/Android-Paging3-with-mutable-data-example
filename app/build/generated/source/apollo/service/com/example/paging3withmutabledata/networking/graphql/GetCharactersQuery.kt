//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.5.0'.
//
package com.example.paging3withmutabledata.networking.graphql

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.example.paging3withmutabledata.networking.graphql.adapter.GetCharactersQuery_ResponseAdapter
import com.example.paging3withmutabledata.networking.graphql.adapter.GetCharactersQuery_VariablesAdapter
import com.example.paging3withmutabledata.networking.graphql.fragment.CharacterView
import com.example.paging3withmutabledata.networking.graphql.selections.GetCharactersQuerySelections
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public data class GetCharactersQuery(
  public val page: Optional<Int?> = Optional.Absent,
) : Query<GetCharactersQuery.Data> {
  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    GetCharactersQuery_VariablesAdapter.toJson(writer, customScalarAdapters, this)
  }

  public override fun adapter(): Adapter<Data> = GetCharactersQuery_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.example.paging3withmutabledata.networking.graphql.type.Query.type
  )
  .selections(selections = GetCharactersQuerySelections.__root)
  .build()

  public data class Data(
    public val characters: Characters?,
  ) : Query.Data

  public data class Characters(
    public val info: Info?,
    public val results: List<Result?>?,
  )

  public data class Info(
    public val next: Int?,
  )

  public data class Result(
    public val __typename: String,
    /**
     * Synthetic field for 'CharacterView'
     */
    public val characterView: CharacterView,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "8f93c413a4e11d1c73beb2de9e213cffdd14361bb8d95259f1d5462aa0033596"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query GetCharacters($page: Int) {
     *   characters(page: $page) {
     *     info {
     *       next
     *     }
     *     results {
     *       __typename
     *       ...CharacterView
     *     }
     *   }
     * }
     *
     * fragment CharacterView on Character {
     *   id
     *   name
     *   status
     *   species
     *   type
     *   image
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query GetCharacters(${'$'}page: Int) { characters(page: ${'$'}page) { info { next } results { __typename ...CharacterView } } }  fragment CharacterView on Character { id name status species type image }"

    public const val OPERATION_NAME: String = "GetCharacters"
  }
}
