//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.5.0'.
//
package com.example.paging3withmutabledata.networking.graphql.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.example.paging3withmutabledata.networking.graphql.GetCharactersQuery
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object GetCharactersQuery_ResponseAdapter {
  public object Data : Adapter<GetCharactersQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("characters")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetCharactersQuery.Data {
      var _characters: GetCharactersQuery.Characters? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _characters = Characters.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetCharactersQuery.Data(
        characters = _characters
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetCharactersQuery.Data,
    ): Unit {
      writer.name("characters")
      Characters.obj().nullable().toJson(writer, customScalarAdapters, value.characters)
    }
  }

  public object Characters : Adapter<GetCharactersQuery.Characters> {
    public val RESPONSE_NAMES: List<String> = listOf("info", "results")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetCharactersQuery.Characters {
      var _info: GetCharactersQuery.Info? = null
      var _results: List<GetCharactersQuery.Result?>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _info = Info.obj().nullable().fromJson(reader, customScalarAdapters)
          1 -> _results = Result.obj(true).nullable().list().nullable().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return GetCharactersQuery.Characters(
        info = _info,
        results = _results
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetCharactersQuery.Characters,
    ): Unit {
      writer.name("info")
      Info.obj().nullable().toJson(writer, customScalarAdapters, value.info)

      writer.name("results")
      Result.obj(true).nullable().list().nullable().toJson(writer, customScalarAdapters,
          value.results)
    }
  }

  public object Info : Adapter<GetCharactersQuery.Info> {
    public val RESPONSE_NAMES: List<String> = listOf("next")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetCharactersQuery.Info {
      var _next: Int? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _next = NullableIntAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetCharactersQuery.Info(
        next = _next
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetCharactersQuery.Info,
    ): Unit {
      writer.name("next")
      NullableIntAdapter.toJson(writer, customScalarAdapters, value.next)
    }
  }

  public object Result : Adapter<GetCharactersQuery.Result> {
    public val RESPONSE_NAMES: List<String> = listOf("__typename")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetCharactersQuery.Result {
      var __typename: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> __typename = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      reader.rewind()
      val _characterView = com.example.paging3withmutabledata.networking.graphql.fragment.CharacterViewImpl_ResponseAdapter.CharacterView.fromJson(reader,
          customScalarAdapters)

      return GetCharactersQuery.Result(
        __typename = __typename!!,
        characterView = _characterView
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetCharactersQuery.Result,
    ): Unit {
      writer.name("__typename")
      StringAdapter.toJson(writer, customScalarAdapters, value.__typename)

      com.example.paging3withmutabledata.networking.graphql.fragment.CharacterViewImpl_ResponseAdapter.CharacterView.toJson(writer,
          customScalarAdapters, value.characterView)
    }
  }
}
